template_id: tool_execution
name: Structured Tool Execution
type: agentic
template: '# 🔧 Tool Execution Framework


  ## Current Task

  **Action**: {{action}}

  **Tool**: {{tool_name}}

  **Step**: {{current_step}} of {{total_steps}}


  ## 📋 Execution Context


  ### Previous Steps Completed:

  {% if previous_results %}

  {% for result in previous_results %}

  - **Step {{result.step}}**: {{result.action}} → {{result.outcome}}

  {% endfor %}

  {% else %}

  - This is the first step

  {% endif %}


  ### Current Tool Information:

  - **Tool Name**: {{tool_name}}

  - **Purpose**: {{tool_purpose}}

  - **Input Format**: {{input_format}}

  - **Expected Output**: {{expected_output}}


  ## 🎯 Execution Protocol


  ### 1️⃣ **Pre-Execution Validation**

  - ✅ Confirm tool is appropriate for this task

  - ✅ Validate input parameters are correctly formatted

  - ✅ Check dependencies from previous steps are satisfied

  - ✅ Verify expected output will serve the next step


  ### 2️⃣ **Tool Invocation**

  ```

  Tool: {{tool_name}}

  Input: {{tool_input}}

  Parameters: {{tool_parameters | default(''None'')}}

  Mode: {{execution_mode | default(''standard'')}}

  ```


  ### 3️⃣ **Output Processing**

  - **Capture**: Record the tool''s raw output

  - **Validate**: Ensure output meets expected format

  - **Transform**: Convert output for next step if needed

  - **Store**: Save results for future reference


  ### 4️⃣ **Error Handling**

  {% if error_handling %}

  {{error_handling}}

  {% else %}

  - If tool fails: Log error, attempt retry with modified parameters

  - If output invalid: Validate format, request correction

  - If unexpected result: Analyze cause, adjust approach

  - If critical failure: Escalate to human oversight

  {% endif %}


  ## 📊 Quality Checks


  ### Output Validation:

  - **Format Check**: Does output match expected structure?

  - **Content Check**: Is the information relevant and accurate?

  - **Completeness Check**: Are all required fields populated?

  - **Consistency Check**: Does output align with previous steps?


  ### Next Step Preparation:

  {% if next_step %}

  - **Next Action**: {{next_step.action}}

  - **Required Data**: {{next_step.required_data}}

  - **Handoff Format**: {{next_step.input_format}}

  {% else %}

  - This is the final step - prepare summary

  {% endif %}


  ## 🔄 **Execute Tool and Process Result**


  **Step {{current_step}} Result**:

  [Tool execution output will be processed here]


  **Status**: [Success/Failure/Retry Needed]

  **Next Action**: [What to do next based on result]


  ---


  {% if current_step < total_steps %}

  **Ready for Step {{current_step + 1}}**: {{next_step.action if next_step else ''Final
  processing''}}

  {% else %}

  **Workflow Complete**: All {{total_steps}} steps executed successfully

  {% endif %}'
input_variables:
- action
- tool_name
- current_step
- total_steps
optional_variables:
- previous_results
- tool_purpose
- input_format
- expected_output
- tool_input
- tool_parameters
- execution_mode
- error_handling
- next_step
validation_rules:
  action:
    type: str
  tool_name:
    type: str
  current_step:
    type: int
  total_steps:
    type: int
metadata:
  use_case: Structured execution of individual tools within multi-step workflows
  domain: agentic
  complexity: medium
  tags:
  - tool-execution
  - workflow
  - validation
  - error-handling
  - structured
  description: Template for executing individual tools with proper validation and
    error handling
  examples:
  - action: Search for recent AI research papers
    tool_name: academic_search
    current_step: 2
    total_steps: 5
    tool_purpose: Find relevant academic papers on specified topic

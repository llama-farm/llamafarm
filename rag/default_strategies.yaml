# RAG System Default Strategies
# Pre-configured strategies for common use cases
# Users can extend, modify, or create custom strategies based on these templates

strategies:
  # =============================================================================
  # SIMPLE STRATEGIES - Getting Started
  # =============================================================================
  - name: "simple"
    description: "Basic document processing for getting started with RAG"
    tags: ["development", "testing", "small_datasets"]
    use_cases: 
      - "Development and testing"
      - "Small document collections"
      - "Quick prototyping"
    
    components:
      parser:
        type: "CSVParser"
        config:
          content_fields: ["subject", "body"]
          metadata_fields: ["type", "priority"]
          combine_content: true
          content_separator: "\n\n"
      
      extractors: []  # No extractors for simplicity
      
      embedder:
        type: "OllamaEmbedder"
        config:
          model: "nomic-embed-text"
          base_url: "http://localhost:11434"
          batch_size: 8
          timeout: 60
      
      vector_store:
        type: "ChromaStore"
        config:
          collection_name: "simple_documents"
          persist_directory: "./data/simple_chroma_db"
      
      retrieval_strategy:
        type: "BasicSimilarityStrategy"
        config:
          distance_metric: "cosine"

  # =============================================================================
  # CUSTOMER SUPPORT STRATEGIES
  # =============================================================================
  - name: "customer_support"
    description: "Customer support ticket processing with entity and sentiment extraction"
    tags: ["support", "tickets", "customer_service"]
    use_cases:
      - "Support ticket analysis"
      - "Issue categorization"
      - "Response suggestion"
    
    components:
      parser:
        type: "CustomerSupportCSVParser"
        config:
          id_field: "ticket_id"
          description_field: "description"
          subject_field: "subject"
          metadata_fields: ["type", "priority", "status", "customer"]
          date_fields: ["created_at", "updated_at"]
          combine_subject_description: true
          priority_map:
            "Critical": 1
            "High": 2
            "Medium": 3
            "Low": 4
      
      extractors:
        - type: "EntityExtractor"
          config:
            entities: ["PERSON", "ORG", "DATE", "PRODUCT"]
            model: "en_core_web_sm"
        
        - type: "PatternExtractor"
          config:
            patterns:
              "EMAIL": "\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b"
              "PHONE": "\\b\\d{3}-\\d{3}-\\d{4}\\b"
              "URL": "https?://[^\\s]+"
              "IP_ADDRESS": "\\b(?:[0-9]{1,3}\\.){3}[0-9]{1,3}\\b"
            include_context: true
            context_window: 50
        
        - type: "SummaryExtractor"
          config:
            max_sentences: 3
            include_keywords: true
      
      embedder:
        type: "OllamaEmbedder"
        config:
          model: "nomic-embed-text"
          batch_size: 16
          timeout: 60
      
      vector_store:
        type: "ChromaStore"
        config:
          collection_name: "customer_support_tickets"
          persist_directory: "./data/support_chroma_db"
      
      retrieval_strategy:
        type: "MetadataFilteredStrategy"
        config:
          distance_metric: "cosine"
          native_metadata_filtering: true
          filter_mode: "combined"

  # =============================================================================
  # LEGAL DOCUMENT STRATEGIES
  # =============================================================================
  - name: "legal"
    description: "Comprehensive legal document analysis with entity extraction and clause detection"
    tags: ["legal", "contracts", "compliance"]
    use_cases:
      - "Contract analysis"
      - "Legal research"
      - "Compliance checking"
    
    components:
      parser:
        type: "PDFParser"
        config:
          extract_metadata: true
          extract_images: false
          combine_pages: true
          chunk_size: 512
          chunk_overlap: 100
      
      extractors:
        - type: "EntityExtractor"
          config:
            entities: ["PERSON", "ORG", "DATE", "MONEY", "LAW"]
            model: "en_core_web_sm"
            include_context: true
        
        - type: "PatternExtractor"
          config:
            patterns:
              "SECTION": "Section\\s+\\d+(\\.\\d+)*"
              "CLAUSE": "Clause\\s+\\d+(\\.\\d+)*"
              "ARTICLE": "Article\\s+[IVXLCDM]+"
              "CASE_NUMBER": "\\d{2}-[A-Z]{2}-\\d{4}"
              "STATUTE": "\\d{1,3}\\s+U\\.S\\.C\\.\\s+ยง\\s+\\d+"
            include_context: true
            context_window: 100
        
        - type: "SummaryExtractor"
          config:
            max_sentences: 5
            include_keywords: true
            include_statistics: true
        
        - type: "KeywordExtractor"
          config:
            algorithm: "yake"
            max_keywords: 20
            ngram_range: [1, 3]
            use_mmr: true
            diversity: 0.3
      
      embedder:
        type: "OllamaEmbedder"
        config:
          model: "nomic-embed-text"
          batch_size: 8
          timeout: 90
      
      vector_store:
        type: "ChromaStore"
        config:
          collection_name: "legal_documents"
          persist_directory: "./data/legal_chroma_db"
      
      retrieval_strategy:
        type: "RerankedStrategy"
        config:
          initial_k: 20
          final_k: 5
          recency_weight: 0.3
          length_weight: 0.1
          metadata_boost_weight: 0.6

  # =============================================================================
  # RESEARCH PAPER STRATEGIES
  # =============================================================================
  - name: "research"
    description: "Academic research paper processing with citation extraction and summarization"
    tags: ["academic", "research", "papers"]
    use_cases:
      - "Literature review"
      - "Research synthesis"
      - "Citation tracking"
    
    components:
      parser:
        type: "PDFParser"
        config:
          extract_metadata: true
          extract_images: false
          combine_pages: true
          chunk_size: 1024
          chunk_overlap: 200
      
      extractors:
        - type: "EntityExtractor"
          config:
            entities: ["PERSON", "ORG", "DATE", "GPE"]
            model: "en_core_web_sm"
        
        - type: "PatternExtractor"
          config:
            patterns:
              "DOI": "10\\.\\d{4,9}/[-._;()/:a-zA-Z0-9]+"
              "ARXIV": "arXiv:\\d{4}\\.\\d{4,5}"
              "CITATION": "\\[\\d+\\]"
              "EQUATION": "\\$.*?\\$"
            include_context: true
        
        - type: "HeadingExtractor"
          config:
            levels: [1, 2, 3]
            include_content: true
            max_content_length: 200
        
        - type: "SummaryExtractor"
          config:
            max_sentences: 5
            include_keywords: true
            include_statistics: true
        
        - type: "KeywordExtractor"
          config:
            algorithm: "yake"
            max_keywords: 15
            use_mmr: true
      
      embedder:
        type: "OllamaEmbedder"
        config:
          model: "nomic-embed-text"
          batch_size: 8
          timeout: 90
      
      vector_store:
        type: "ChromaStore"
        config:
          collection_name: "research_papers"
          persist_directory: "./data/research_chroma_db"
      
      retrieval_strategy:
        type: "HybridUniversalStrategy"
        config:
          strategies:
            - type: "BasicSimilarityStrategy"
              weight: 0.6
            - type: "MetadataFilteredStrategy"
              weight: 0.4
          fusion_method: "weighted"
          final_k: 5

  # =============================================================================
  # BUSINESS DOCUMENT STRATEGIES
  # =============================================================================
  - name: "business"
    description: "Business reports and corporate document analysis"
    tags: ["business", "reports", "corporate"]
    use_cases:
      - "Financial report analysis"
      - "Business intelligence"
      - "Market research"
    
    components:
      parser:
        type: "PDFParser"
        config:
          extract_metadata: true
          extract_tables: true
          extract_images: false
          combine_pages: true
          chunk_size: 768
          chunk_overlap: 150
      
      extractors:
        - type: "EntityExtractor"
          config:
            entities: ["ORG", "PERSON", "MONEY", "DATE", "PERCENT"]
            model: "en_core_web_sm"
        
        - type: "PatternExtractor"
          config:
            patterns:
              "CURRENCY": "\\$[0-9,]+(\\.\\d{2})?"
              "PERCENTAGE": "\\d+(\\.\\d+)?%"
              "QUARTER": "Q[1-4]\\s+\\d{4}"
              "FISCAL_YEAR": "FY\\s*\\d{4}"
            include_context: true
        
        - type: "TableExtractor"
          config:
            min_rows: 2
            min_cols: 2
            extract_headers: true
        
        - type: "ContentStatisticsExtractor"
          config:
            include_readability: true
            include_vocabulary: false
            include_sentiment: false
        
        - type: "SummaryExtractor"
          config:
            max_sentences: 3
            include_keywords: true
      
      embedder:
        type: "OllamaEmbedder"
        config:
          model: "nomic-embed-text"
          batch_size: 12
          timeout: 60
      
      vector_store:
        type: "ChromaStore"
        config:
          collection_name: "business_documents"
          persist_directory: "./data/business_chroma_db"
      
      retrieval_strategy:
        type: "MultiQueryStrategy"
        config:
          num_queries: 3
          aggregation_method: "rrf"
          top_k_per_query: 10
          final_k: 5

  # =============================================================================
  # TECHNICAL DOCUMENTATION STRATEGIES
  # =============================================================================
  - name: "technical"
    description: "Technical documentation and code documentation processing"
    tags: ["technical", "documentation", "code"]
    use_cases:
      - "API documentation"
      - "Technical guides"
      - "Code documentation"
    
    components:
      parser:
        type: "MarkdownParser"
        config:
          extract_code_blocks: true
          extract_links: true
          preserve_formatting: true
          chunk_size: 512
          chunk_overlap: 100
      
      extractors:
        - type: "HeadingExtractor"
          config:
            levels: [1, 2, 3, 4]
            include_content: true
            max_content_length: 150
        
        - type: "LinkExtractor"
          config:
            validate_urls: false
            extract_anchor_text: true
        
        - type: "PatternExtractor"
          config:
            patterns:
              "URL": "https?://[^\\s]+"
              "EMAIL": "\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b"
              "VERSION": "v?\\d+\\.\\d+(\\.\\d+)?"
              "COMMAND": "`[^`]+`"
            include_context: true
      
      embedder:
        type: "OllamaEmbedder"
        config:
          model: "nomic-embed-text"
          batch_size: 16
          timeout: 60
      
      vector_store:
        type: "ChromaStore"
        config:
          collection_name: "technical_docs"
          persist_directory: "./data/technical_chroma_db"
      
      retrieval_strategy:
        type: "HybridUniversalStrategy"
        config:
          strategies:
            - type: "BasicSimilarityStrategy"
              weight: 0.7
            - type: "MetadataFilteredStrategy"
              weight: 0.3
          fusion_method: "weighted"
          final_k: 5

  # =============================================================================
  # PRODUCTION-READY STRATEGIES
  # =============================================================================
  - name: "production"
    description: "Production-ready configuration with all optimizations"
    tags: ["production", "optimized", "enterprise"]
    use_cases:
      - "Production deployments"
      - "High-performance requirements"
      - "Enterprise applications"
    
    components:
      parser:
        type: "UniversalParser"
        config:
          pdf_config:
            extract_metadata: true
            extract_tables: true
            combine_pages: true
          text_config:
            encoding: "utf-8"
          csv_config:
            has_header: true
          chunk_size: 768
          chunk_overlap: 150
      
      extractors:
        - type: "EntityExtractor"
          config:
            entities: ["PERSON", "ORG", "DATE", "GPE", "PRODUCT", "MONEY"]
            model: "en_core_web_md"
            batch_size: 100
        
        - type: "KeywordExtractor"
          config:
            algorithm: "yake"
            max_keywords: 20
            use_mmr: true
            diversity: 0.3
        
        - type: "SummaryExtractor"
          config:
            max_sentences: 3
            include_keywords: true
        
        - type: "ContentStatisticsExtractor"
          config:
            include_readability: true
            include_vocabulary: true
            include_sentiment: true
      
      embedder:
        type: "OllamaEmbedder"
        config:
          model: "nomic-embed-text"
          batch_size: 32
          timeout: 120
          retry_count: 3
          connection_pool_size: 10
      
      vector_store:
        type: "ChromaStore"
        config:
          collection_name: "production_documents"
          persist_directory: "./data/production_chroma_db"
          metadata_indexing: true
          full_text_search: true
      
      retrieval_strategy:
        type: "HybridUniversalStrategy"
        config:
          strategies:
            - type: "BasicSimilarityStrategy"
              weight: 0.4
            - type: "MetadataFilteredStrategy"
              weight: 0.3
            - type: "RerankedStrategy"
              weight: 0.3
          fusion_method: "rrf"
          final_k: 10
          cache_enabled: true
          cache_ttl: 3600

  # =============================================================================
  # CUSTOM TEMPLATE
  # =============================================================================
  - name: "custom_template"
    description: "Template for creating custom strategies"
    tags: ["template", "custom", "example"]
    use_cases:
      - "Starting point for custom strategies"
      - "Reference implementation"
    
    components:
      parser:
        type: "YourParser"  # Replace with actual parser
        config:
          # Your parser configuration
          setting1: "value1"
          setting2: "value2"
      
      extractors:
        - type: "YourExtractor"  # Replace with actual extractor
          config:
            # Your extractor configuration
            setting1: "value1"
      
      embedder:
        type: "YourEmbedder"  # Replace with actual embedder
        config:
          # Your embedder configuration
          model: "your-model"
      
      vector_store:
        type: "YourVectorStore"  # Replace with actual store
        config:
          # Your vector store configuration
          collection_name: "your_collection"
      
      retrieval_strategy:
        type: "YourStrategy"  # Replace with actual strategy
        config:
          # Your retrieval configuration
          top_k: 5

  # =============================================================================
  # TEST STRATEGY FOR CLI
  # =============================================================================
  - name: "test_cli_strategy"
    description: "Test strategy for automated CLI testing"
    tags: ["test", "cli", "automation"]
    use_cases:
      - "CLI testing"
      - "Integration testing"
      - "Automated testing"
    
    components:
      parser:
        type: "DirectoryParser"
        config:
          recursive: false
          file_extensions: [".txt", ".md"]
      
      extractors:
        - type: "KeywordExtractor"
          config:
            max_keywords: 5
      
      embedder:
        type: "OllamaEmbedder"
        config:
          model: "nomic-embed-text"
          batch_size: 4
          timeout: 60
      
      vector_store:
        type: "ChromaStore"
        config:
          collection_name: "test_cli_collection"
          persist_directory: "./vectordb/test_cli_collection"
      
      retrieval_strategy:
        type: "BasicSimilarityStrategy"
        config:
          distance_metric: "cosine"

# =============================================================================
# USAGE NOTES
# =============================================================================
# These notes are for documentation purposes and are not part of the strategies

# Selecting Strategies:
# 1. **simple**: Best for getting started, testing, small datasets
# 2. **customer_support**: Optimized for support ticket processing
# 3. **legal**: Comprehensive legal document analysis with entities
# 4. **research**: Academic papers and research documents
# 5. **business**: Business reports and corporate documents
# 6. **technical**: Software documentation and technical content
# 7. **production**: High-performance production deployment
# 8. **custom_template**: Starting point for your own strategies

# Customization:
# - Copy any strategy and modify components as needed
# - Mix and match parsers, extractors, and retrieval strategies
# - Adjust configuration parameters for your specific use case
# - Test performance and accuracy with your data

# Performance Tuning:
# - Increase batch_size for higher throughput (more memory usage)
# - Use ChromaDB-specific strategies for better ChromaDB performance
# - Add more extractors for richer metadata (slower processing)
# - Use HybridUniversalStrategy for better accuracy (slower retrieval)

# Scaling Considerations:
# - Switch from Ollama to OpenAI embeddings for higher quality
# - Switch from ChromaStore to Pinecone for larger scale
# - Use containerized services (ollama-server, chroma-server)
# - Implement caching and connection pooling for production
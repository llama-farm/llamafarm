# Demo Strategies Configuration
# Uses the new unified strategy schema format
# This file demonstrates the power of the strategy system for quick setup

strategies:
  # =============================================================================
  # DEMO 1: RESEARCH PAPERS STRATEGY
  # =============================================================================
  - name: "research_papers_demo"
    description: "Optimized strategy for academic research paper analysis demo"
    tags: ["demo", "research", "academic", "papers"]
    use_cases: 
      - "Academic research analysis"
      - "Literature review"
      - "Paper summarization"
    
    components:
      parser:
        type: "DirectoryParser"
        config:
          recursive: true
          include_patterns: ["*.txt", "*.md"]
          parser_map:
            ".txt": "PlainTextParser"
            ".md": "MarkdownParser"
          parser_configs:
            PlainTextParser:
              chunk_size: 1500  # Larger chunks for academic papers
              chunk_overlap: 200  # Good overlap for academic context
              chunk_strategy: paragraphs  # Paragraph-aware chunking for research papers
              respect_sentence_boundaries: true
              respect_paragraph_boundaries: true  # Keep paragraphs intact for academic context
              min_chunk_size: 100
              preserve_line_breaks: true
              strip_empty_lines: true
              detect_structure: true
            MarkdownParser:
              chunk_size: 2000  # Even larger for markdown academic papers
              chunk_overlap: 300
              chunk_strategy: headings  # Use heading structure for academic papers
              respect_sentence_boundaries: true
              respect_paragraph_boundaries: true
              min_chunk_size: 150
      
      extractors:
        - type: "ContentStatisticsExtractor"
          priority: 100
          config:
            include_readability: true
            include_vocabulary: true
            include_structure: true
            include_sentiment_indicators: true
        
        - type: "EntityExtractor"
          priority: 90
          config:
            entity_types: ["PERSON", "ORG", "GPE", "DATE", "PERCENT", "PRODUCT"]
            use_fallback: true
            min_entity_length: 2
        
        - type: "SummaryExtractor"
          priority: 80
          config:
            summary_sentences: 3
            min_sentence_length: 10
            max_sentence_length: 500
            include_key_phrases: true
            include_statistics: true
      
      embedder:
        type: "OllamaEmbedder"
        config:
          model: "nomic-embed-text"
          batch_size: 3
          timeout: 60
      
      vector_store:
        type: "ChromaStore"
        config:
          collection_name: "research_papers"
          persist_directory: "./demos/vectordb/research_papers"
          distance_metric: "cosine"  # Best for semantic similarity
      
      retrieval_strategy:
        type: "BasicSimilarityStrategy"
        config:
          distance_metric: "cosine"
          top_k: 3
    
    optimization:
      performance_priority: "accuracy"
      batch_settings:
        batch_size: 3
        max_batch_wait_ms: 100
      caching:
        enabled: true
        ttl_seconds: 3600

  # =============================================================================
  # DEMO 2: CUSTOMER SUPPORT STRATEGY
  # =============================================================================
  - name: "customer_support_demo"
    description: "Optimized strategy for customer support system demo"
    tags: ["demo", "support", "customer-service", "helpdesk"]
    use_cases:
      - "Customer support ticketing"
      - "Knowledge base search"
      - "Support automation"
    
    components:
      parser:
        type: "DirectoryParser"
        config:
          recursive: false
          include_patterns: ["*.csv", "*.txt"]
          parser_map:
            ".csv": "CustomerSupportCSVParser"
            ".txt": "PlainTextParser"
          parser_configs:
            CustomerSupportCSVParser:
              content_fields: ["description"]
              metadata_fields: ["ticket_id", "customer_name", "customer_email", "priority", "category", "issue_type", "status", "agent_name"]
              priority_mapping:
                "Critical": 1
                "High": 2
                "Medium": 3
                "Low": 4
            PlainTextParser:
              chunk_size: 800  # Optimal for customer support knowledge base
              chunk_overlap: 100  # Maintain context between chunks
              chunk_strategy: sentences  # Use sentence-aware chunking for better readability
              respect_sentence_boundaries: true  # Don't break sentences
              respect_paragraph_boundaries: false  # Allow paragraph breaks for better chunk sizes
              min_chunk_size: 50  # Minimum chunk size
              preserve_line_breaks: true
              strip_empty_lines: true
              detect_structure: true  # Detect headers, lists, etc.
      
      extractors:
        - type: "EntityExtractor"
          priority: 95
          config:
            entity_types: ["PERSON", "ORG", "GPE", "DATE", "PERCENT", "PRODUCT"]
            use_fallback: true
            min_entity_length: 2
        
        - type: "PatternExtractor"
          priority: 90
          config:
            patterns: ["email", "phone", "url", "ip_address"]
            include_context: true
        
        - type: "SummaryExtractor"
          priority: 85
          config:
            summary_sentences: 2
            min_sentence_length: 10
            max_sentence_length: 300
            include_key_phrases: true
            include_statistics: false
      
      embedder:
        type: "OllamaEmbedder"
        config:
          model: "nomic-embed-text"
          batch_size: 5
          timeout: 60
      
      vector_store:
        type: "ChromaStore"
        config:
          collection_name: "customer_support"
          persist_directory: "./demos/vectordb/customer_support"
      
      retrieval_strategy:
        type: "MetadataFilteredStrategy"
        config:
          top_k: 5
          filters:
            priority: ["Critical", "High"]
          filter_mode: "post"
          fallback_multiplier: 2
    
    optimization:
      performance_priority: "balanced"
      resource_constraints:
        max_memory_gb: 2
        max_cpu_cores: 2
    
    validation:
      required_metadata: ["ticket_id", "priority", "category"]
      min_document_length: 10
      max_document_length: 5000

  # =============================================================================
  # DEMO 3: CODE DOCUMENTATION STRATEGY
  # =============================================================================
  - name: "code_documentation_demo"
    description: "Optimized strategy for code documentation demo"
    tags: ["demo", "code", "documentation", "technical"]
    use_cases:
      - "API documentation search"
      - "Code examples retrieval"
      - "Technical documentation"
    
    components:
      parser:
        type: "DirectoryParser"
        config:
          recursive: true
          include_patterns: ["*.md", "*.py", "*.txt"]
          exclude_patterns: ["__pycache__", "*.pyc"]
          parser_map:
            ".md": "MarkdownParser"
            ".py": "PlainTextParser"
            ".txt": "PlainTextParser"
          parser_configs:
            MarkdownParser:
              chunk_size: 1200  # Medium chunks for code documentation
              chunk_overlap: 150
              chunk_strategy: headings  # Use heading structure for documentation
              respect_sentence_boundaries: true
              respect_paragraph_boundaries: true  # Preserve code block structure
              min_chunk_size: 80
              extract_headings: true
              extract_code_blocks: true
              preserve_formatting: false
            PlainTextParser:
              chunk_size: 1000  # Smaller chunks for code files
              chunk_overlap: 100
              chunk_strategy: characters  # Character-based with boundary protection
              respect_sentence_boundaries: true
              respect_paragraph_boundaries: false  # Allow breaking for code
              min_chunk_size: 60
              preserve_line_breaks: true  # Important for code
              strip_empty_lines: false  # Keep code formatting
              detect_structure: true
      
      extractors:
        - type: "HeadingExtractor"
          priority: 100
          config:
            max_level: 4
            include_hierarchy: true
            extract_outline: true
        
        - type: "PatternExtractor"
          priority: 90
          config:
            patterns: ["url", "file_path"]
            include_context: true
        
        - type: "YAKEExtractor"
          priority: 80
          config:
            max_keywords: 15
            min_keyword_length: 3
      
      embedder:
        type: "OllamaEmbedder"
        config:
          model: "nomic-embed-text"
          batch_size: 4
          timeout: 60
      
      vector_store:
        type: "ChromaStore"
        config:
          collection_name: "code_documentation"
          persist_directory: "./demos/vectordb/code_documentation"
      
      retrieval_strategy:
        type: "HybridUniversalStrategy"
        config:
          strategies:
            - type: "BasicSimilarityStrategy"
              weight: 0.6
              config:
                top_k: 10
                distance_metric: "cosine"
            
            - type: "MultiQueryStrategy"
              weight: 0.4
              config:
                num_queries: 3
                top_k: 10
                aggregation_method: "weighted"
          
          combination_method: "weighted_average"
          final_k: 5
    
    optimization:
      performance_priority: "balanced"
      caching:
        enabled: true
        ttl_seconds: 7200

  # =============================================================================
  # DEMO 4: NEWS ANALYSIS STRATEGY
  # =============================================================================
  - name: "news_analysis_demo"
    description: "Optimized strategy for news article analysis demo"
    tags: ["demo", "news", "analysis", "media"]
    use_cases:
      - "News article analysis"
      - "Trend detection"
      - "Content summarization"
    
    components:
      parser:
        type: "DirectoryParser"
        config:
          recursive: true
          include_patterns: ["*.html", "*.htm"]
          exclude_patterns: []
          parser_map:
            ".html": "HTMLParser"
            ".htm": "HTMLParser"
          parser_configs:
            HTMLParser:
              chunk_size: 1400  # Good size for news articles
              chunk_overlap: 180
              chunk_strategy: elements  # Use HTML semantic elements for news
              respect_sentence_boundaries: true
              respect_paragraph_boundaries: true
              min_chunk_size: 100
              extract_metadata: true
              extract_links: true
              remove_scripts: true
              remove_styles: true
              preserve_structure: false  # Focus on content, not HTML structure
      
      extractors:
        - type: "EntityExtractor"
          priority: 100
          config:
            entity_types: ["PERSON", "ORG", "GPE", "DATE", "MONEY", "EVENT"]
            use_fallback: true
            confidence_threshold: 0.7
        
        - type: "DateTimeExtractor"
          priority: 95
          config:
            fuzzy_parsing: true
            extract_relative: true
            date_format: "ISO"
        
        - type: "SummaryExtractor"
          priority: 85
          config:
            summary_sentences: 3
            algorithm: "textrank"
            include_key_phrases: true
      
      embedder:
        type: "OllamaEmbedder"
        config:
          model: "nomic-embed-text"
          batch_size: 5
          timeout: 60
      
      vector_store:
        type: "ChromaStore"
        config:
          collection_name: "news_analysis"
          persist_directory: "./demos/vectordb/news_analysis"
      
      retrieval_strategy:
        type: "RerankedStrategy"
        config:
          initial_k: 20
          final_k: 5
          rerank_factors:
            similarity_weight: 0.5
            recency_weight: 0.3
            metadata_weight: 0.2
          normalize_scores: true
    
    monitoring:
      metrics_enabled: true
      log_level: "INFO"

  # =============================================================================
  # DEMO 5: BUSINESS REPORTS STRATEGY
  # =============================================================================
  - name: "business_reports_demo"
    description: "Optimized strategy for business reports analysis demo"
    tags: ["demo", "business", "reports", "analytics"]
    use_cases:
      - "Financial report analysis"
      - "Business intelligence"
      - "Market analysis"
    
    components:
      parser:
        type: "DirectoryParser"
        config:
          recursive: true
          include_patterns: ["*.pdf", "*.docx", "*.xlsx"]
          exclude_patterns: []
          parser_map:
            ".pdf": "PDFParser"
            ".docx": "DocxParser"
            ".xlsx": "ExcelParser"
          parser_configs:
            PDFParser:
              chunk_size: 1800  # Larger chunks for business reports
              chunk_overlap: 250
              chunk_strategy: pages  # Use page-based chunking for PDFs
              respect_sentence_boundaries: true
              respect_paragraph_boundaries: false
              min_chunk_size: 200
              extract_metadata: true
              combine_pages: true
              extract_outline: true
            DocxParser:
              chunk_size: 1600  # Good for Word business documents
              chunk_overlap: 200
              chunk_strategy: sections  # Use Word's built-in sections
              respect_sentence_boundaries: true
              respect_paragraph_boundaries: true
              min_chunk_size: 150
              extract_metadata: true
              extract_tables: true
              extract_comments: false
      
      extractors:
        - type: "TableExtractor"
          priority: 100
          config:
            output_format: "dict"
            extract_headers: true
            min_rows: 3
        
        - type: "PatternExtractor"
          priority: 95
          config:
            custom_patterns:
              - name: "currency_amount"
                pattern: "\\$[0-9]{1,3}(?:,[0-9]{3})*(?:\\.[0-9]{2})?"
                description: "USD currency amounts"
              - name: "percentage"
                pattern: "\\b\\d{1,3}(?:\\.\\d{1,2})?%"
                description: "Percentage values"
        
        - type: "SentimentExtractor"
          priority: 90
          config:
            analyze_business_tone: true
            extract_confidence: true
            categories: ["positive", "negative", "neutral", "mixed"]
        
        - type: "EntityExtractor"
          priority: 88
          config:
            entity_types: ["ORG", "MONEY", "PERCENT", "DATE", "PRODUCT"]
            use_fallback: true
            confidence_threshold: 0.7
        
        - type: "StatisticsExtractor"
          priority: 85
          config:
            include_readability: false
            include_vocabulary: false
            include_structure: true
            include_sentiment_indicators: true
      
      embedder:
        type: "OllamaEmbedder"
        config:
          model: "nomic-embed-text"
          batch_size: 4
          timeout: 60
      
      vector_store:
        type: "ChromaStore"
        config:
          collection_name: "business_reports"
          persist_directory: "./demos/vectordb/business_reports"
      
      retrieval_strategy:
        type: "MetadataFilteredStrategy"
        config:
          top_k: 10
          filter_mode: "pre"
          fallback_multiplier: 2
    
    optimization:
      performance_priority: "accuracy"
      batch_settings:
        batch_size: 4
        max_batch_wait_ms: 200
    
    validation:
      max_document_length: 100000
      min_document_length: 100

  # =============================================================================
  # DEMO 6: DOCUMENT MANAGEMENT STRATEGY
  # =============================================================================
  - name: "document_management_demo"
    description: "Strategy for document lifecycle management demo"
    tags: ["demo", "management", "operations", "vector-db"]
    use_cases:
      - "Document lifecycle operations"
      - "Vector database management"
      - "Deduplication testing"
    
    components:
      parser:
        type: "PlainTextParser"
        config:
          chunk_size: null  # No chunking for document lifecycle demo
          chunk_strategy: characters  # Strategy doesn't matter when chunk_size is null
          respect_sentence_boundaries: true
          respect_paragraph_boundaries: false
          min_chunk_size: 50  # Ignored when chunk_size is null
          detect_structure: true
          preserve_line_breaks: true
          strip_empty_lines: true
      
      extractors:
        - type: "EntityExtractor"
          priority: 95
          config:
            entity_types: ["PERSON", "ORG", "DATE", "VERSION"]
            use_fallback: true
        
        - type: "PatternExtractor"
          priority: 90
          config:
            patterns: ["version", "date"]
            include_context: true
      
      embedder:
        type: "OllamaEmbedder"
        config:
          model: "nomic-embed-text"
          batch_size: 1
          timeout: 60
      
      vector_store:
        type: "ChromaStore"
        config:
          collection_name: "document_management"
          persist_directory: "./demos/vectordb/document_management"
      
      retrieval_strategy:
        type: "BasicSimilarityStrategy"
        config:
          top_k: 5
    
    optimization:
      performance_priority: "balanced"
      resource_constraints:
        max_memory_gb: 1
        max_cpu_cores: 2
    
    validation:
      min_document_length: 10
      max_document_length: 100000

# =============================================================================
# STRATEGY TEMPLATES
# =============================================================================

  # ==============================================================================
  # TEST STRATEGY FOR CLI TESTING  
  # ==============================================================================
  - name: "test_cli_strategy"
    description: "Test strategy for automated CLI testing"
    tags: ["test", "cli"]
    use_cases:
      - "CLI testing"
      - "Integration testing"
    
    components:
      parser:
        type: "DirectoryParser"
        config:
          recursive: false
          file_extensions: [".txt", ".md"]
      
      extractors:
        - type: "KeywordExtractor"
          priority: 100
          config:
            max_keywords: 5
      
      embedder:
        type: "OllamaEmbedder"
        config:
          model: "nomic-embed-text"
          batch_size: 4
      
      vector_store:
        type: "ChromaStore"
        config:
          collection_name: "test_cli_collection"
          persist_directory: "./vectordb/test_cli_collection"
          distance_metric: "cosine"
      
      retrieval_strategy:
        type: "BasicSimilarityStrategy"
        config:
          top_k: 5

  # =============================================================================
  # AFI DOCUMENT PROCESSING STRATEGY
  # =============================================================================
  - name: "afi_document_demo"
    description: "Specialized strategy for AFI (Air Force Instruction) document processing"
    tags: ["demo", "military", "technical", "maintenance", "pdf"]
    use_cases:
      - "Military technical documentation"
      - "Maintenance instruction processing"
      - "Regulatory document analysis"
      - "AFI compliance checking"
    
    components:
      parser:
        type: "PDFParser"
        config:
          # Advanced PDF parsing with structure preservation
          chunk_size: 1500  # Optimal for technical instructions
          chunk_overlap: 200  # Maintain context across chunks
          chunk_strategy: pages  # Page-aware chunking for AFI documents
          respect_sentence_boundaries: true
          respect_paragraph_boundaries: true
          min_chunk_size: 100
          
          # PDF-specific features
          extract_metadata: true  # Get document metadata
          extract_page_structure: true  # Preserve page structure
          combine_pages: false  # Keep pages separate for citation
          include_page_numbers: true  # Critical for AFI references
          extract_outline: true  # Extract table of contents
          page_separator: "\n\n--- Page {page_num} ---\n\n"
          
          # Advanced extraction
          extract_tables: true  # Extract maintenance tables
          extract_images: false  # Skip diagrams for text processing
          extract_annotations: true  # Get document annotations
          
      extractors:
        # Page and location extractor
        - type: "PathExtractor"
          priority: 100
          config:
            enabled: true
            
        # AFI-specific pattern extraction
        - type: "PatternExtractor"
          priority: 90
          config:
            patterns:
              # AFI/TO references
              afi_references:
                pattern: '(?:AFI|AFMAN|AFPD|TO|T\.O\.|DAFI)\s*\d+[-\.\s]*\d*'
                description: "Air Force Instructions and Technical Orders"
                
              # Paragraph references (e.g., 3.2.1.4)
              paragraph_refs:
                pattern: '\b\d+(?:\.\d+){1,4}\b'
                description: "Paragraph number references"
                
              # Form numbers
              form_numbers:
                pattern: '(?:AF\s*Form|DD\s*Form|SF)\s*\d+'
                description: "Military form references"
                
              # Compliance terms
              compliance_terms:
                pattern: '\b(?:shall|must|will|should|may)\b'
                flags: "IGNORECASE"
                description: "Compliance and requirement keywords"
                
              # Warning/Caution/Note statements
              warning_statements:
                pattern: '(?:WARNING|CAUTION|NOTE):\s*[^\.]+\.'
                flags: "IGNORECASE"
                description: "Safety and advisory statements"
                
              # Technical specifications
              tech_specs:
                pattern: '\b\d+(?:\.\d+)?\s*(?:inch|in|mm|cm|ft|lb|kg|psi|mph|Hz|V|A|W)\b'
                description: "Technical measurements and specifications"
          
        # Entity extraction for military terms
        - type: "EntityExtractor"
          priority: 80
          config:
            model: "en_core_web_sm"  # Can upgrade to military-specific model
            entity_types:
              - "ORG"     # Military organizations
              - "LOC"     # Bases and locations
              - "DATE"    # Important dates
              - "PERSON"  # Personnel references
            custom_patterns:
              - pattern: "MAJCOM"
                label: "ORG"
              - pattern: "Wing|Squadron|Group|Flight"
                label: "ORG"
              - pattern: "MDS|WUC|NSN"
                label: "TECH"
              
        # Statistics for document structure
        - type: "StatisticsExtractor"
          priority: 70
          config:
            compute_readability: true
            compute_complexity: true
            extract_structure: true
            
      embedder:
        type: "OllamaEmbedder"
        config:
          model: "nomic-embed-text"
          host: "http://localhost:11434"
          batch_size: 4  # Smaller batches for longer AFI chunks
          timeout: 60
          
      vector_store:
        type: "ChromaStore"
        config:
          collection_name: "afi_documents"
          persist_directory: "./demos/vectordb/afi_documents"
          distance_metric: "cosine"
          
          # Metadata configuration for AFI documents
          metadata_config:
            indexed_fields:
              - "page_number"
              - "section"
              - "document_type"
              - "afi_number"
              - "effective_date"
            filterable_fields:
              - "page_number"
              - "has_warning"
              - "has_table"
              - "compliance_level"
            searchable_fields:
              - "afi_references"
              - "form_numbers"
              - "paragraph_refs"
              
      retrieval_strategy:
        type: "HybridUniversalStrategy"
        config:
          combination_method: "weighted_average"
          strategies:
            - type: "BasicSimilarityStrategy"
              weight: 0.6
              config:
                distance_metric: "cosine"
                score_threshold: 0.7
                
            - type: "MetadataFilteredStrategy"
              weight: 0.3
              config:
                filter_mode: "pre"
                fallback_multiplier: 2.0
                filters:
                  # Can add runtime filters for page ranges, dates, etc.
                  
            - type: "RerankedStrategy"
              weight: 0.1
              config:
                reranking_factors:
                  - factor: "recency"
                    weight: 0.2
                  - factor: "keyword_overlap"
                    weight: 0.5
                  - factor: "metadata_match"
                    weight: 0.3
                    
    performance:
      chunking:
        optimal_chunk_size: 1500
        recommended_overlap: 200
      indexing:
        batch_size: 10
        parallel_processing: false  # Sequential for page order preservation
      search:
        default_top_k: 10
        enable_caching: true
        cache_ttl: 3600

strategy_templates:
  minimal_demo:
    name: "minimal_demo"
    description: "Minimal configuration for quick demos"
    tags: ["template", "minimal", "quick-start"]
    use_cases: ["Quick prototyping"]
    
    components:
      parser:
        type: "PlainTextParser"
        config:
          chunk_size: 1000
          overlap: 200
      
      embedder:
        type: "OllamaEmbedder"
        config:
          model: "nomic-embed-text"
          batch_size: 10
      
      vector_store:
        type: "ChromaStore"
        config:
          collection_name: "demo"
          persist_directory: "./demos/vectordb/demo"
      
      retrieval_strategy:
        type: "BasicSimilarityStrategy"
        config:
          top_k: 5


# RAG System Schema - JSON Schema Format
# Version: 2.0.0
# This schema follows JSON Schema draft-07 conventions while maintaining YAML format

$schema: "http://json-schema.org/draft-07/schema#"
$id: "https://rag-system.com/schemas/v2.0.0/rag-schema.yaml"
title: "RAG System Configuration Schema"
description: "Complete schema for RAG system strategies, components, and configurations"
type: "object"
additionalProperties: false

definitions:
  # ==============================================================================
  # STRATEGY DEFINITION
  # ==============================================================================
  strategyDefinition:
    type: "object"
    title: "Strategy Definition"
    description: "Defines a complete RAG strategy configuration"
    required: ["name", "description", "components"]
    additionalProperties: false
    properties:
      name:
        type: "string"
        pattern: "^[a-z][a-z0-9_]*$"
        minLength: 1
        maxLength: 50
        description: "Unique strategy identifier"
        examples: ["simple", "customer_support", "legal_documents"]
      
      description:
        type: "string"
        minLength: 10
        maxLength: 500
        description: "Clear description of strategy purpose"
      
      version:
        type: "string"
        pattern: "^\\d+\\.\\d+\\.\\d+$"
        default: "1.0.0"
        description: "Semantic version"
      
      tags:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          pattern: "^[a-z0-9_-]+$"
        description: "Tags for categorization"
        examples: [["production", "optimized"], ["development", "testing"]]
      
      use_cases:
        type: "array"
        minItems: 1
        uniqueItems: true
        items:
          type: "string"
          minLength: 3
        description: "Specific use cases"
      
      components:
        $ref: "#/definitions/strategyComponents"
      
      optimization:
        $ref: "#/definitions/optimizationSettings"
      
      validation:
        $ref: "#/definitions/validationSettings"
      
      monitoring:
        $ref: "#/definitions/monitoringSettings"

  # ==============================================================================
  # STRATEGY COMPONENTS
  # ==============================================================================
  strategyComponents:
    type: "object"
    title: "Strategy Components"
    required: ["parser", "embedder", "vector_store", "retrieval_strategy"]
    additionalProperties: false
    properties:
      parser:
        $ref: "#/definitions/parserConfig"
      
      extractors:
        type: "array"
        maxItems: 10
        items:
          $ref: "#/definitions/extractorConfig"
      
      embedder:
        $ref: "#/definitions/embedderConfig"
      
      vector_store:
        $ref: "#/definitions/vectorStoreConfig"
      
      retrieval_strategy:
        $ref: "#/definitions/retrievalStrategyConfig"

  # ==============================================================================
  # PARSER CONFIGURATIONS
  # ==============================================================================
  parserConfig:
    type: "object"
    title: "Parser Configuration"
    required: ["type"]
    additionalProperties: false
    properties:
      type:
        type: "string"
        enum: ["CSVParser", "PDFParser", "MarkdownParser", "HTMLParser", 
                "DocxParser", "ExcelParser", "PlainTextParser"]
        description: "Parser type identifier"
      
      config:
        type: "object"
        description: "Parser-specific configuration"
        oneOf:
          - $ref: "#/definitions/parsers/csvParserConfig"
          - $ref: "#/definitions/parsers/pdfParserConfig"
          - $ref: "#/definitions/parsers/markdownParserConfig"
          - $ref: "#/definitions/parsers/htmlParserConfig"
          - $ref: "#/definitions/parsers/docxParserConfig"
          - $ref: "#/definitions/parsers/excelParserConfig"
          - $ref: "#/definitions/parsers/plainTextParserConfig"

  parsers:
    csvParserConfig:
      type: "object"
      title: "CSV Parser Configuration"
      additionalProperties: false
      properties:
        content_fields:
          type: "array"
          items:
            type: "string"
          default: ["subject", "body"]
          description: "Fields to use as document content"
        
        metadata_fields:
          type: "array"
          items:
            type: "string"
          default: []
          description: "Fields to store as metadata"
        
        id_field:
          type: "string"
          default: "id"
          description: "Field to use as document ID"
        
        combine_content:
          type: "boolean"
          default: false
          description: "Whether to combine multiple content fields"
        
        content_separator:
          type: "string"
          default: " "
          description: "Separator for combined content"
        
        encoding:
          type: "string"
          default: "utf-8"
          description: "CSV file encoding"
        
        delimiter:
          type: "string"
          default: ","
          maxLength: 1
          description: "CSV delimiter character"

    pdfParserConfig:
      type: "object"
      title: "PDF Parser Configuration"
      additionalProperties: false
      properties:
        extract_metadata:
          type: "boolean"
          default: true
          description: "Extract PDF metadata"
        
        extract_page_structure:
          type: "boolean"
          default: true
          description: "Extract page-level structure"
        
        combine_pages:
          type: "boolean"
          default: true
          description: "Combine all pages into single document"
        
        page_separator:
          type: "string"
          default: "\n\n--- Page Break ---\n\n"
          description: "Separator between pages"
        
        min_text_length:
          type: "integer"
          default: 10
          minimum: 0
          description: "Minimum text length to include page"
        
        include_page_numbers:
          type: "boolean"
          default: true
          description: "Include page numbers in text"
        
        extract_outline:
          type: "boolean"
          default: true
          description: "Extract document outline"
        
        extract_images:
          type: "boolean"
          default: false
          description: "Extract embedded images"
        
        ocr_enabled:
          type: "boolean"
          default: false
          description: "Enable OCR for scanned documents"

    markdownParserConfig:
      type: "object"
      title: "Markdown Parser Configuration"
      additionalProperties: false
      properties:
        extract_metadata:
          type: "boolean"
          default: true
          description: "Extract YAML frontmatter"
        
        extract_headings:
          type: "boolean"
          default: true
          description: "Extract heading structure"
        
        extract_links:
          type: "boolean"
          default: true
          description: "Extract all links"
        
        extract_code_blocks:
          type: "boolean"
          default: true
          description: "Extract code blocks"
        
        chunk_by_headings:
          type: "boolean"
          default: false
          description: "Split by headings"
        
        preserve_formatting:
          type: "boolean"
          default: false
          description: "Preserve Markdown formatting"
        
        heading_level_split:
          type: "integer"
          default: 2
          minimum: 1
          maximum: 6
          description: "Heading level for splitting"

    htmlParserConfig:
      type: "object"
      title: "HTML Parser Configuration"
      additionalProperties: false
      properties:
        extract_metadata:
          type: "boolean"
          default: true
          description: "Extract meta tags"
        
        extract_links:
          type: "boolean"
          default: true
          description: "Extract hyperlinks"
        
        extract_images:
          type: "boolean"
          default: true
          description: "Extract image sources"
        
        preserve_structure:
          type: "boolean"
          default: false
          description: "Preserve HTML structure"
        
        remove_scripts:
          type: "boolean"
          default: true
          description: "Remove JavaScript"
        
        remove_styles:
          type: "boolean"
          default: true
          description: "Remove CSS"
        
        text_only:
          type: "boolean"
          default: false
          description: "Extract only text"

    docxParserConfig:
      type: "object"
      title: "DOCX Parser Configuration"
      additionalProperties: false
      properties:
        extract_metadata:
          type: "boolean"
          default: true
          description: "Extract document properties"
        
        extract_headers_footers:
          type: "boolean"
          default: true
          description: "Include headers and footers"
        
        extract_comments:
          type: "boolean"
          default: true
          description: "Extract comments"
        
        extract_tables:
          type: "boolean"
          default: true
          description: "Extract tables"
        
        extract_images:
          type: "boolean"
          default: false
          description: "Extract images"
        
        preserve_formatting:
          type: "boolean"
          default: false
          description: "Preserve text formatting"

    excelParserConfig:
      type: "object"
      title: "Excel Parser Configuration"
      additionalProperties: false
      properties:
        sheet_names:
          type: ["array", "null"]
          items:
            type: "string"
          default: null
          description: "Specific sheets to parse"
        
        combine_sheets:
          type: "boolean"
          default: false
          description: "Combine all sheets"
        
        extract_formulas:
          type: "boolean"
          default: false
          description: "Extract cell formulas"
        
        extract_charts:
          type: "boolean"
          default: false
          description: "Extract chart metadata"
        
        table_format:
          type: "string"
          enum: ["csv", "markdown", "json", "text"]
          default: "markdown"
          description: "Table output format"
        
        header_row:
          type: "integer"
          default: 0
          minimum: 0
          description: "Header row index"

    plainTextParserConfig:
      type: "object"
      title: "Plain Text Parser Configuration"
      additionalProperties: false
      properties:
        encoding:
          type: "string"
          default: "utf-8"
          description: "Text encoding"
        
        chunk_size:
          type: "integer"
          default: 1000
          minimum: 100
          maximum: 10000
          description: "Chunk size in characters"
        
        chunk_overlap:
          type: "integer"
          default: 200
          minimum: 0
          maximum: 1000
          description: "Overlap between chunks"
        
        split_by:
          type: "string"
          enum: ["characters", "words", "sentences", "paragraphs", "lines"]
          default: "characters"
          description: "Splitting method"
        
        preserve_whitespace:
          type: "boolean"
          default: false
          description: "Preserve whitespace"

  # ==============================================================================
  # EXTRACTOR CONFIGURATIONS
  # ==============================================================================
  extractorConfig:
    type: "object"
    title: "Extractor Configuration"
    required: ["type"]
    additionalProperties: false
    properties:
      type:
        type: "string"
        enum: ["KeywordExtractor", "EntityExtractor", "DateTimeExtractor",
                "HeadingExtractor", "LinkExtractor", "PathExtractor",
                "PatternExtractor", "StatisticsExtractor", "SummaryExtractor",
                "TableExtractor"]
        description: "Extractor type"
      
      priority:
        type: "integer"
        minimum: 0
        maximum: 100
        default: 50
        description: "Processing priority"
      
      config:
        type: "object"
        description: "Extractor-specific configuration"
        oneOf:
          - $ref: "#/definitions/extractors/keywordExtractorConfig"
          - $ref: "#/definitions/extractors/entityExtractorConfig"
          - $ref: "#/definitions/extractors/dateTimeExtractorConfig"
          - $ref: "#/definitions/extractors/headingExtractorConfig"
          - $ref: "#/definitions/extractors/linkExtractorConfig"
          - $ref: "#/definitions/extractors/pathExtractorConfig"
          - $ref: "#/definitions/extractors/patternExtractorConfig"
          - $ref: "#/definitions/extractors/statisticsExtractorConfig"
          - $ref: "#/definitions/extractors/summaryExtractorConfig"
          - $ref: "#/definitions/extractors/tableExtractorConfig"

  extractors:
    keywordExtractorConfig:
      type: "object"
      title: "Keyword Extractor Configuration"
      additionalProperties: false
      properties:
        algorithm:
          type: "string"
          enum: ["rake", "yake", "tfidf", "textrank"]
          default: "rake"
          description: "Extraction algorithm"
        
        max_keywords:
          type: "integer"
          default: 10
          minimum: 1
          maximum: 100
          description: "Maximum keywords"
        
        min_keyword_length:
          type: "integer"
          default: 3
          minimum: 1
          description: "Minimum keyword length"
        
        include_scores:
          type: "boolean"
          default: true
          description: "Include relevance scores"
        
        language:
          type: "string"
          default: "english"
          description: "Language for stop words"

    entityExtractorConfig:
      type: "object"
      title: "Entity Extractor Configuration"
      additionalProperties: false
      properties:
        model:
          type: "string"
          default: "en_core_web_sm"
          description: "NER model name"
        
        entity_types:
          type: "array"
          items:
            type: "string"
            enum: ["PERSON", "ORG", "GPE", "DATE", "TIME", "MONEY", 
                    "EMAIL", "PHONE", "URL", "LAW"]
          default: ["PERSON", "ORG", "GPE", "DATE", "TIME", "MONEY", 
                    "EMAIL", "PHONE", "URL"]
          description: "Entity types to extract"
        
        use_fallback:
          type: "boolean"
          default: true
          description: "Use regex fallback"
        
        min_entity_length:
          type: "integer"
          default: 2
          minimum: 1
          description: "Minimum entity length"
        
        merge_entities:
          type: "boolean"
          default: true
          description: "Merge adjacent entities"
        
        confidence_threshold:
          type: "number"
          default: 0.7
          minimum: 0.0
          maximum: 1.0
          description: "Minimum confidence score"

    dateTimeExtractorConfig:
      type: "object"
      title: "DateTime Extractor Configuration"
      additionalProperties: false
      properties:
        fuzzy_parsing:
          type: "boolean"
          default: true
          description: "Enable fuzzy parsing"
        
        extract_relative:
          type: "boolean"
          default: true
          description: "Extract relative dates"
        
        extract_times:
          type: "boolean"
          default: true
          description: "Extract time expressions"
        
        extract_durations:
          type: "boolean"
          default: true
          description: "Extract durations"
        
        default_timezone:
          type: "string"
          default: "UTC"
          description: "Default timezone"
        
        date_format:
          type: "string"
          default: "ISO"
          description: "Output date format"
        
        prefer_dates_from:
          type: "string"
          enum: ["past", "future", "current"]
          default: "current"
          description: "Preference for ambiguous dates"

    headingExtractorConfig:
      type: "object"
      title: "Heading Extractor Configuration"
      additionalProperties: false
      properties:
        max_level:
          type: "integer"
          default: 6
          minimum: 1
          maximum: 6
          description: "Maximum heading level"
        
        include_hierarchy:
          type: "boolean"
          default: true
          description: "Include hierarchy structure"
        
        extract_outline:
          type: "boolean"
          default: true
          description: "Generate document outline"
        
        min_heading_length:
          type: "integer"
          default: 3
          minimum: 1
          description: "Minimum heading length"

    linkExtractorConfig:
      type: "object"
      title: "Link Extractor Configuration"
      additionalProperties: false
      properties:
        extract_urls:
          type: "boolean"
          default: true
          description: "Extract URLs"
        
        extract_emails:
          type: "boolean"
          default: true
          description: "Extract email addresses"
        
        extract_domains:
          type: "boolean"
          default: true
          description: "Extract unique domains"
        
        validate_urls:
          type: "boolean"
          default: false
          description: "Validate URL format"
        
        resolve_redirects:
          type: "boolean"
          default: false
          description: "Resolve URL redirects"

    pathExtractorConfig:
      type: "object"
      title: "Path Extractor Configuration"
      additionalProperties: false
      properties:
        extract_file_paths:
          type: "boolean"
          default: true
          description: "Extract file paths"
        
        extract_urls:
          type: "boolean"
          default: true
          description: "Extract URL paths"
        
        extract_s3_paths:
          type: "boolean"
          default: true
          description: "Extract S3 paths"
        
        validate_paths:
          type: "boolean"
          default: false
          description: "Validate path existence"
        
        normalize_paths:
          type: "boolean"
          default: true
          description: "Normalize path formats"

    patternExtractorConfig:
      type: "object"
      title: "Pattern Extractor Configuration"
      additionalProperties: false
      properties:
        predefined_patterns:
          type: "array"
          items:
            type: "string"
            enum: ["email", "phone", "url", "ip", "ssn", 
                    "credit_card", "zip_code"]
          default: []
          description: "Predefined patterns"
        
        custom_patterns:
          type: "array"
          items:
            type: "object"
            required: ["name", "pattern"]
            additionalProperties: false
            properties:
              name:
                type: "string"
                description: "Pattern name"
              pattern:
                type: "string"
                description: "Regex pattern"
              description:
                type: "string"
                description: "Pattern description"
          default: []
          description: "Custom regex patterns"
        
        case_sensitive:
          type: "boolean"
          default: false
          description: "Case-sensitive matching"
        
        return_positions:
          type: "boolean"
          default: false
          description: "Return match positions"

    statisticsExtractorConfig:
      type: "object"
      title: "Statistics Extractor Configuration"
      additionalProperties: false
      properties:
        include_readability:
          type: "boolean"
          default: true
          description: "Calculate readability scores"
        
        include_vocabulary:
          type: "boolean"
          default: true
          description: "Analyze vocabulary"
        
        include_structure:
          type: "boolean"
          default: true
          description: "Analyze text structure"
        
        include_sentiment:
          type: "boolean"
          default: false
          description: "Basic sentiment analysis"
        
        include_language:
          type: "boolean"
          default: true
          description: "Detect language"

    summaryExtractorConfig:
      type: "object"
      title: "Summary Extractor Configuration"
      additionalProperties: false
      properties:
        summary_sentences:
          type: "integer"
          default: 3
          minimum: 1
          maximum: 10
          description: "Number of summary sentences"
        
        algorithm:
          type: "string"
          enum: ["textrank", "lsa", "luhn", "lexrank"]
          default: "textrank"
          description: "Summarization algorithm"
        
        include_key_phrases:
          type: "boolean"
          default: true
          description: "Extract key phrases"
        
        include_statistics:
          type: "boolean"
          default: true
          description: "Include text statistics"

    tableExtractorConfig:
      type: "object"
      title: "Table Extractor Configuration"
      additionalProperties: false
      properties:
        output_format:
          type: "string"
          enum: ["dict", "list", "csv", "markdown"]
          default: "dict"
          description: "Output format"
        
        extract_headers:
          type: "boolean"
          default: true
          description: "Extract table headers"
        
        merge_cells:
          type: "boolean"
          default: true
          description: "Handle merged cells"
        
        min_rows:
          type: "integer"
          default: 2
          minimum: 1
          description: "Minimum rows for table"

  # ==============================================================================
  # EMBEDDER CONFIGURATIONS
  # ==============================================================================
  embedderConfig:
    type: "object"
    title: "Embedder Configuration"
    required: ["type"]
    additionalProperties: false
    properties:
      type:
        type: "string"
        enum: ["OllamaEmbedder", "OpenAIEmbedder", "HuggingFaceEmbedder", 
                "SentenceTransformerEmbedder"]
        description: "Embedder type"
      
      config:
        type: "object"
        description: "Embedder-specific configuration"
        oneOf:
          - $ref: "#/definitions/embedders/ollamaEmbedderConfig"
          - $ref: "#/definitions/embedders/openaiEmbedderConfig"
          - $ref: "#/definitions/embedders/huggingfaceEmbedderConfig"
          - $ref: "#/definitions/embedders/sentenceTransformerConfig"

  embedders:
    ollamaEmbedderConfig:
      type: "object"
      title: "Ollama Embedder Configuration"
      additionalProperties: false
      properties:
        model:
          type: "string"
          default: "nomic-embed-text"
          enum: ["nomic-embed-text", "mxbai-embed-large"]
          description: "Ollama model name"
        
        base_url:
          type: "string"
          format: "uri"
          default: "http://localhost:11434"
          description: "Ollama API endpoint"
        
        dimension:
          type: "integer"
          default: 768
          minimum: 128
          maximum: 4096
          description: "Embedding dimension"
        
        batch_size:
          type: "integer"
          default: 16
          minimum: 1
          maximum: 128
          description: "Batch processing size"
        
        timeout:
          type: "integer"
          default: 60
          minimum: 10
          description: "Request timeout (seconds)"
        
        auto_pull:
          type: "boolean"
          default: true
          description: "Auto-pull missing models"

    openaiEmbedderConfig:
      type: "object"
      title: "OpenAI Embedder Configuration"
      required: ["api_key"]
      additionalProperties: false
      properties:
        api_key:
          type: "string"
          description: "OpenAI API key"
        
        model:
          type: "string"
          default: "text-embedding-3-small"
          enum: ["text-embedding-3-small", "text-embedding-3-large", 
                  "text-embedding-ada-002"]
          description: "OpenAI model"
        
        dimension:
          type: ["integer", "null"]
          minimum: 256
          maximum: 3072
          description: "Override dimension"
        
        batch_size:
          type: "integer"
          default: 100
          minimum: 1
          maximum: 2048
          description: "Batch size"
        
        max_retries:
          type: "integer"
          default: 3
          minimum: 0
          maximum: 10
          description: "Max retry attempts"

    huggingfaceEmbedderConfig:
      type: "object"
      title: "HuggingFace Embedder Configuration"
      additionalProperties: false
      properties:
        model_name:
          type: "string"
          default: "sentence-transformers/all-MiniLM-L6-v2"
          description: "HuggingFace model ID"
        
        device:
          type: "string"
          enum: ["cpu", "cuda", "mps", "auto"]
          default: "auto"
          description: "Computation device"
        
        batch_size:
          type: "integer"
          default: 32
          minimum: 1
          maximum: 256
          description: "Batch size"
        
        normalize_embeddings:
          type: "boolean"
          default: true
          description: "L2 normalize embeddings"
        
        show_progress_bar:
          type: "boolean"
          default: false
          description: "Show progress bar"
        
        cache_folder:
          type: ["string", "null"]
          default: null
          description: "Model cache directory"

    sentenceTransformerConfig:
      type: "object"
      title: "Sentence Transformer Configuration"
      additionalProperties: false
      properties:
        model_name:
          type: "string"
          default: "all-MiniLM-L6-v2"
          description: "Model name"
        
        device:
          type: "string"
          default: "cpu"
          enum: ["cpu", "cuda", "mps"]
          description: "Computation device"
        
        batch_size:
          type: "integer"
          default: 32
          minimum: 1
          maximum: 256
          description: "Batch size"
        
        normalize_embeddings:
          type: "boolean"
          default: true
          description: "Normalize embeddings"
        
        pooling_strategy:
          type: "string"
          enum: ["mean", "max", "cls"]
          default: "mean"
          description: "Token pooling strategy"

  # ==============================================================================
  # VECTOR STORE CONFIGURATIONS
  # ==============================================================================
  vectorStoreConfig:
    type: "object"
    title: "Vector Store Configuration"
    required: ["type"]
    additionalProperties: false
    properties:
      type:
        type: "string"
        enum: ["ChromaStore", "FAISSStore", "PineconeStore", "QdrantStore"]
        description: "Vector store type"
      
      config:
        type: "object"
        description: "Store-specific configuration"
        oneOf:
          - $ref: "#/definitions/vectorStores/chromaStoreConfig"
          - $ref: "#/definitions/vectorStores/faissStoreConfig"
          - $ref: "#/definitions/vectorStores/pineconeStoreConfig"
          - $ref: "#/definitions/vectorStores/qdrantStoreConfig"

  vectorStores:
    chromaStoreConfig:
      type: "object"
      title: "Chroma Store Configuration"
      additionalProperties: false
      properties:
        collection_name:
          type: "string"
          default: "documents"
          pattern: "^[a-zA-Z0-9_-]+$"
          description: "Collection name"
        
        persist_directory:
          type: "string"
          default: "./data/chroma_db"
          description: "Persistence directory"
        
        host:
          type: ["string", "null"]
          default: null
          description: "Server host"
        
        port:
          type: "integer"
          default: 8000
          minimum: 1
          maximum: 65535
          description: "Server port"
        
        distance_function:
          type: "string"
          enum: ["cosine", "l2", "ip"]
          default: "cosine"
          description: "Distance metric"
        
        embedding_function:
          type: ["string", "null"]
          default: null
          description: "Built-in embedding function"

    faissStoreConfig:
      type: "object"
      title: "FAISS Store Configuration"
      required: ["dimension"]
      additionalProperties: false
      properties:
        dimension:
          type: "integer"
          minimum: 1
          maximum: 4096
          description: "Vector dimension"
        
        index_type:
          type: "string"
          enum: ["Flat", "IVF", "HNSW", "LSH"]
          default: "Flat"
          description: "Index type"
        
        metric:
          type: "string"
          enum: ["L2", "IP", "Cosine"]
          default: "L2"
          description: "Distance metric"
        
        nlist:
          type: "integer"
          default: 100
          minimum: 1
          description: "Number of clusters (IVF)"
        
        nprobe:
          type: "integer"
          default: 10
          minimum: 1
          description: "Clusters to search (IVF)"
        
        use_gpu:
          type: "boolean"
          default: false
          description: "Enable GPU acceleration"

    pineconeStoreConfig:
      type: "object"
      title: "Pinecone Store Configuration"
      required: ["api_key", "index_name", "dimension"]
      additionalProperties: false
      properties:
        api_key:
          type: "string"
          description: "Pinecone API key"
        
        environment:
          type: "string"
          default: "us-east-1-aws"
          description: "Pinecone environment"
        
        index_name:
          type: "string"
          pattern: "^[a-z0-9-]+$"
          description: "Index name"
        
        dimension:
          type: "integer"
          minimum: 1
          maximum: 20000
          description: "Vector dimension"
        
        metric:
          type: "string"
          enum: ["euclidean", "cosine", "dotproduct"]
          default: "cosine"
          description: "Distance metric"
        
        namespace:
          type: "string"
          default: ""
          description: "Namespace for isolation"
        
        replicas:
          type: "integer"
          default: 1
          minimum: 1
          maximum: 20
          description: "Number of replicas"

    qdrantStoreConfig:
      type: "object"
      title: "Qdrant Store Configuration"
      required: ["vector_size"]
      additionalProperties: false
      properties:
        host:
          type: "string"
          default: "localhost"
          description: "Server host"
        
        port:
          type: "integer"
          default: 6333
          minimum: 1
          maximum: 65535
          description: "Server port"
        
        grpc_port:
          type: "integer"
          default: 6334
          minimum: 1
          maximum: 65535
          description: "gRPC port"
        
        api_key:
          type: ["string", "null"]
          default: null
          description: "API key"
        
        collection_name:
          type: "string"
          default: "documents"
          pattern: "^[a-zA-Z0-9_-]+$"
          description: "Collection name"
        
        vector_size:
          type: "integer"
          minimum: 1
          maximum: 65536
          description: "Vector dimension"
        
        distance:
          type: "string"
          enum: ["Cosine", "Euclid", "Dot"]
          default: "Cosine"
          description: "Distance metric"
        
        on_disk:
          type: "boolean"
          default: false
          description: "Store vectors on disk"

  # ==============================================================================
  # RETRIEVAL STRATEGY CONFIGURATIONS
  # ==============================================================================
  retrievalStrategyConfig:
    type: "object"
    title: "Retrieval Strategy Configuration"
    required: ["type"]
    additionalProperties: false
    properties:
      type:
        type: "string"
        enum: ["BasicSimilarityStrategy", "MetadataFilteredStrategy",
                "MultiQueryStrategy", "RerankedStrategy", "HybridUniversalStrategy"]
        description: "Strategy type"
      
      config:
        type: "object"
        description: "Strategy-specific configuration"
        oneOf:
          - $ref: "#/definitions/retrievalStrategies/basicSimilarityConfig"
          - $ref: "#/definitions/retrievalStrategies/metadataFilteredConfig"
          - $ref: "#/definitions/retrievalStrategies/multiQueryConfig"
          - $ref: "#/definitions/retrievalStrategies/rerankedConfig"
          - $ref: "#/definitions/retrievalStrategies/hybridUniversalConfig"

  retrievalStrategies:
    basicSimilarityConfig:
      type: "object"
      title: "Basic Similarity Configuration"
      additionalProperties: false
      properties:
        top_k:
          type: "integer"
          default: 10
          minimum: 1
          maximum: 1000
          description: "Number of results"
        
        distance_metric:
          type: "string"
          default: "cosine"
          enum: ["cosine", "euclidean", "manhattan", "dot"]
          description: "Distance metric"
        
        score_threshold:
          type: ["number", "null"]
          default: null
          minimum: 0.0
          maximum: 1.0
          description: "Minimum similarity score"

    metadataFilteredConfig:
      type: "object"
      title: "Metadata Filtered Configuration"
      additionalProperties: false
      properties:
        top_k:
          type: "integer"
          default: 10
          minimum: 1
          maximum: 1000
          description: "Number of results"
        
        filters:
          type: "object"
          default: {}
          description: "Metadata filters"
          additionalProperties:
            oneOf:
              - type: "string"
              - type: "number"
              - type: "boolean"
              - type: "array"
                items:
                  oneOf:
                    - type: "string"
                    - type: "number"
                    - type: "boolean"
        
        filter_mode:
          type: "string"
          enum: ["pre", "post"]
          default: "pre"
          description: "When to apply filters"
        
        fallback_multiplier:
          type: "integer"
          default: 3
          minimum: 1
          maximum: 10
          description: "Multiplier for post-filtering"

    multiQueryConfig:
      type: "object"
      title: "Multi Query Configuration"
      additionalProperties: false
      properties:
        num_queries:
          type: "integer"
          default: 3
          minimum: 1
          maximum: 10
          description: "Number of query variations"
        
        top_k:
          type: "integer"
          default: 10
          minimum: 1
          maximum: 1000
          description: "Results per query"
        
        aggregation_method:
          type: "string"
          default: "weighted"
          enum: ["max", "mean", "weighted", "reciprocal_rank"]
          description: "Result aggregation method"
        
        query_weights:
          type: ["array", "null"]
          items:
            type: "number"
            minimum: 0.0
            maximum: 1.0
          default: null
          description: "Weights for each query"

    rerankedConfig:
      type: "object"
      title: "Reranked Configuration"
      additionalProperties: false
      properties:
        initial_k:
          type: "integer"
          default: 30
          minimum: 10
          maximum: 1000
          description: "Initial candidates"
        
        final_k:
          type: "integer"
          default: 10
          minimum: 1
          maximum: 100
          description: "Final results"
        
        rerank_factors:
          type: "object"
          additionalProperties: false
          properties:
            similarity_weight:
              type: "number"
              default: 0.7
              minimum: 0.0
              maximum: 1.0
            recency_weight:
              type: "number"
              default: 0.1
              minimum: 0.0
              maximum: 1.0
            length_weight:
              type: "number"
              default: 0.1
              minimum: 0.0
              maximum: 1.0
            metadata_weight:
              type: "number"
              default: 0.1
              minimum: 0.0
              maximum: 1.0
          description: "Reranking factor weights"
        
        normalize_scores:
          type: "boolean"
          default: true
          description: "Normalize scores before combining"

    hybridUniversalConfig:
      type: "object"
      title: "Hybrid Universal Configuration"
      additionalProperties: false
      properties:
        strategies:
          type: "array"
          minItems: 2
          maxItems: 5
          items:
            type: "object"
            required: ["type"]
            additionalProperties: false
            properties:
              type:
                type: "string"
                enum: ["BasicSimilarityStrategy", "MetadataFilteredStrategy",
                        "MultiQueryStrategy", "RerankedStrategy"]
              weight:
                type: "number"
                default: 1.0
                minimum: 0.0
                maximum: 1.0
              config:
                type: "object"
          description: "Sub-strategies to combine"
        
        combination_method:
          type: "string"
          default: "weighted_average"
          enum: ["weighted_average", "rank_fusion", "score_fusion"]
          description: "Combination method"
        
        final_k:
          type: "integer"
          default: 10
          minimum: 1
          maximum: 1000
          description: "Final number of results"

  # ==============================================================================
  # OPTIMIZATION SETTINGS
  # ==============================================================================
  optimizationSettings:
    type: "object"
    title: "Optimization Settings"
    additionalProperties: false
    properties:
      performance_priority:
        type: "string"
        enum: ["speed", "accuracy", "balanced", "cost"]
        default: "balanced"
        description: "Primary optimization goal"
      
      resource_constraints:
        type: "object"
        additionalProperties: false
        properties:
          max_memory_mb:
            type: "integer"
            minimum: 128
            maximum: 1048576
            description: "Maximum memory usage (MB)"
          
          max_cpu_cores:
            type: "integer"
            minimum: 1
            maximum: 256
            description: "Maximum CPU cores"
          
          gpu_enabled:
            type: "boolean"
            default: false
            description: "GPU acceleration available"
          
          gpu_memory_mb:
            type: "integer"
            minimum: 1024
            maximum: 131072
            description: "GPU memory limit (MB)"
      
      batch_settings:
        type: "object"
        additionalProperties: false
        properties:
          parser_batch_size:
            type: "integer"
            minimum: 1
            maximum: 1000
            default: 10
            description: "Document parsing batch size"
          
          embedder_batch_size:
            type: "integer"
            minimum: 1
            maximum: 1000
            default: 32
            description: "Embedding generation batch size"
          
          indexing_batch_size:
            type: "integer"
            minimum: 1
            maximum: 10000
            default: 100
            description: "Vector indexing batch size"
      
      caching:
        type: "object"
        additionalProperties: false
        properties:
          enable_embedding_cache:
            type: "boolean"
            default: true
            description: "Cache embeddings"
          
          enable_search_cache:
            type: "boolean"
            default: false
            description: "Cache search results"
          
          cache_backend:
            type: "string"
            enum: ["memory", "redis", "disk"]
            default: "memory"
            description: "Cache storage backend"
          
          cache_ttl_seconds:
            type: "integer"
            minimum: 0
            maximum: 86400
            default: 3600
            description: "Cache TTL (seconds)"

  # ==============================================================================
  # VALIDATION SETTINGS
  # ==============================================================================
  validationSettings:
    type: "object"
    title: "Validation Settings"
    additionalProperties: false
    properties:
      document_validation:
        type: "object"
        additionalProperties: false
        properties:
          min_length:
            type: "integer"
            minimum: 0
            default: 10
            description: "Minimum document length"
          
          max_length:
            type: "integer"
            minimum: 0
            default: 1000000
            description: "Maximum document length"
          
          allowed_types:
            type: "array"
            items:
              type: "string"
              enum: ["text", "pdf", "csv", "html", "markdown", "docx", "xlsx"]
            default: ["text", "pdf", "csv", "html", "markdown"]
            description: "Allowed document types"
          
          encoding_detection:
            type: "boolean"
            default: true
            description: "Auto-detect encoding"
      
      metadata_validation:
        type: "object"
        additionalProperties: false
        properties:
          required_fields:
            type: "array"
            items:
              type: "string"
            default: []
            description: "Required metadata fields"
          
          field_types:
            type: "object"
            additionalProperties:
              type: "string"
              enum: ["string", "number", "boolean", "array", "object", "date"]
            description: "Expected field types"
          
          value_constraints:
            type: "object"
            additionalProperties:
              type: "object"
            description: "Field value constraints"
      
      content_filters:
        type: "array"
        items:
          type: "object"
          required: ["type", "action"]
          additionalProperties: false
          properties:
            type:
              type: "string"
              enum: ["regex", "keyword", "language", "pii"]
            pattern:
              type: "string"
            action:
              type: "string"
              enum: ["reject", "warn", "redact", "tag"]
            severity:
              type: "string"
              enum: ["low", "medium", "high", "critical"]

  # ==============================================================================
  # MONITORING SETTINGS
  # ==============================================================================
  monitoringSettings:
    type: "object"
    title: "Monitoring Settings"
    additionalProperties: false
    properties:
      metrics:
        type: "object"
        additionalProperties: false
        properties:
          enable_metrics:
            type: "boolean"
            default: true
            description: "Enable metrics collection"
          
          metrics_backend:
            type: "string"
            enum: ["console", "prometheus", "datadog", "cloudwatch"]
            default: "console"
            description: "Metrics export backend"
          
          metrics_interval:
            type: "integer"
            default: 60
            minimum: 1
            maximum: 3600
            description: "Metrics collection interval (seconds)"
          
          custom_metrics:
            type: "array"
            items:
              type: "object"
              required: ["name", "type"]
              additionalProperties: false
              properties:
                name:
                  type: "string"
                type:
                  type: "string"
                  enum: ["counter", "gauge", "histogram"]
                labels:
                  type: "array"
                  items:
                    type: "string"
      
      logging:
        type: "object"
        additionalProperties: false
        properties:
          log_level:
            type: "string"
            enum: ["DEBUG", "INFO", "WARNING", "ERROR", "CRITICAL"]
            default: "INFO"
            description: "Logging level"
          
          log_format:
            type: "string"
            enum: ["json", "text", "structured"]
            default: "text"
            description: "Log format"
          
          log_destination:
            type: "string"
            enum: ["console", "file", "syslog", "cloudwatch"]
            default: "console"
            description: "Log destination"
          
          log_rotation:
            type: "object"
            additionalProperties: false
            properties:
              enabled:
                type: "boolean"
                default: true
              max_size_mb:
                type: "integer"
                default: 100
                minimum: 1
                maximum: 10000
              max_files:
                type: "integer"
                default: 10
                minimum: 1
                maximum: 100
      
      tracing:
        type: "object"
        additionalProperties: false
        properties:
          enable_tracing:
            type: "boolean"
            default: false
            description: "Enable distributed tracing"
          
          tracing_backend:
            type: "string"
            enum: ["jaeger", "zipkin", "datadog", "xray"]
            default: "jaeger"
            description: "Tracing backend"
          
          sample_rate:
            type: "number"
            minimum: 0.0
            maximum: 1.0
            default: 0.1
            description: "Trace sampling rate"
      
      alerting:
        type: "object"
        additionalProperties: false
        properties:
          enable_alerts:
            type: "boolean"
            default: false
            description: "Enable alerting"
          
          alert_channels:
            type: "array"
            items:
              type: "object"
              required: ["type"]
              additionalProperties: false
              properties:
                type:
                  type: "string"
                  enum: ["email", "slack", "pagerduty", "webhook"]
                config:
                  type: "object"
          
          alert_rules:
            type: "array"
            items:
              type: "object"
              required: ["name", "condition", "severity"]
              additionalProperties: false
              properties:
                name:
                  type: "string"
                condition:
                  type: "string"
                threshold:
                  type: "number"
                severity:
                  type: "string"
                  enum: ["low", "medium", "high", "critical"]

# ==============================================================================
# ROOT SCHEMA PROPERTIES
# ==============================================================================
properties:
  version:
    type: "string"
    pattern: "^\\d+\\.\\d+\\.\\d+$"
    description: "Schema version"
    default: "2.0.0"
  
  schema_type:
    type: "string"
    enum: ["unified", "strategy", "component"]
    default: "unified"
    description: "Schema type identifier"
  
  strategies:
    type: "array"
    title: "Strategy Definitions"
    description: "Array of strategy configurations"
    items:
      $ref: "#/definitions/strategyDefinition"
  
  strategy_templates:
    type: "object"
    title: "Predefined Strategy Templates"
    description: "Ready-to-use strategy configurations"
    additionalProperties:
      $ref: "#/definitions/strategyDefinition"
  
  component_metadata:
    type: "object"
    title: "Component Metadata"
    description: "Metadata about available components"
    properties:
      parsers:
        type: "object"
        additionalProperties:
          type: "object"
          properties:
            description:
              type: "string"
            class_name:
              type: "string"
            module:
              type: "string"
            use_cases:
              type: "array"
              items:
                type: "string"
            dependencies:
              type: "object"
              properties:
                required:
                  type: "array"
                  items:
                    type: "string"
                optional:
                  type: "array"
                  items:
                    type: "string"
      
      extractors:
        type: "object"
        additionalProperties:
          type: "object"
      
      embedders:
        type: "object"
        additionalProperties:
          type: "object"
      
      vector_stores:
        type: "object"
        additionalProperties:
          type: "object"
      
      retrieval_strategies:
        type: "object"
        additionalProperties:
          type: "object"
  
  compatibility_rules:
    type: "object"
    title: "Component Compatibility Rules"
    description: "Rules for component compatibility"
    properties:
      component_compatibility:
        type: "object"
      embedder_store_compatibility:
        type: "object"
      strategy_store_optimization:
        type: "object"
  
  validation_rules:
    type: "object"
    title: "Validation Rules"
    description: "System-wide validation rules"
    properties:
      required_fields:
        type: "object"
      field_constraints:
        type: "object"
      performance_warnings:
        type: "array"
        items:
          type: "object"
  
  best_practices:
    type: "object"
    title: "Best Practices"
    description: "Recommended configuration patterns"
    additionalProperties:
      type: "array"
      items:
        type: "string"

required: ["version", "schema_type"]
version: v1

prompts:
  - name: "customer_support"
    prompt: "You are a helpful customer support assistant. Answer questions politely and accurately based on the provided context."
    description: "Default customer support prompt for handling user inquiries"

  - name: "technical_documentation"
    prompt: "You are a technical documentation assistant. Provide clear, accurate, and detailed explanations of technical concepts."
    description: "Prompt for generating technical documentation and explanations"

rag:
  description: "Customer support RAG configuration with extractors integration"

  parsers:
    csv:
      type: "CustomerSupportCSVParser"
      config:
        content_fields: ["question", "answer", "solution", "explanation"]
        metadata_fields: ["category", "timestamp", "priority", "tags", "author"]
        id_field: "id"
        combine_content: true
        content_separator: "\n\n"
        chunk_metadata:
          generate_summary: true
          extract_keywords: true
          include_statistics: true
          # Config-based extractors: these will be applied automatically
          extractors:
            yake:
              max_keywords: 15
              language: "en"
              n: 3
              dedupLim: 0.9
              top: 20
            entities:
              model: "en_core_web_sm"
              labels: ["PERSON", "ORG", "GPE", "MONEY", "DATE"]
            datetime:
              formats: ["%Y-%m-%d", "%m/%d/%Y", "%B %d, %Y"]
              extract_relative: true
            statistics:
              include_readability: true
              include_sentiment: false
              word_frequency_top_n: 10
      file_extensions: [".csv"]
      mime_types: ["text/csv", "application/csv"]

    pdf:
      type: "PDFParser"
      config:
        extract_metadata: true
        chunk_size: 1000
        chunk_overlap: 200
        chunk_metadata:
          # Different extractor config for PDF documents
          extractors:
            rake:
              max_keywords: 20
              min_keyword_frequency: 2
              max_keyword_length: 3
            entities:
              model: "en_core_web_sm"
              labels: ["PERSON", "ORG", "PRODUCT", "EVENT", "LAW"]
            datetime:
              formats: ["%Y-%m-%d", "%m/%d/%Y", "%B %d, %Y", "%d/%m/%Y"]
              extract_relative: true
              timezone_aware: true
      file_extensions: [".pdf"]
      mime_types: ["application/pdf"]

    text:
      type: "TextParser" 
      config:
        chunk_size: 500
        chunk_overlap: 100
        chunk_metadata:
          # Minimal extractors for simple text
          extractors:
            yake:
              max_keywords: 10
              language: "en"
            statistics:
              include_readability: true
              include_sentiment: true
      file_extensions: [".txt", ".md"]
      mime_types: ["text/plain", "text/markdown"]

  embedders:
    default:
      type: "OllamaEmbedder"
      config:
        model: "mxbai-embed-large"
        base_url: "http://localhost:11434"
        batch_size: 32
        timeout: 60

    fast:
      type: "OllamaEmbedder"
      config:
        model: "nomic-embed-text"
        base_url: "http://localhost:11434"
        batch_size: 64
        timeout: 30

  vector_stores:
    default:
      type: "ChromaStore"
      config:
        collection_name: "customer_support_knowledge_base"
        persist_directory: "./data/vector_store/chroma"
        metadata_config:
          enable_versioning: true
          enable_soft_delete: true
          hash_algorithm: "sha256"
          retention_policy:
            default_ttl_days: 365
            max_versions: 10
            cleanup_schedule: "weekly"
          required_metadata:
            - "doc_id"
            - "chunk_id"
            - "filename"
            - "created_at"
            - "updated_at"
          indexed_metadata:
            - "doc_id"
            - "filename"
            - "created_at"
            - "priority"
            - "category"

    dev:
      type: "ChromaStore"
      config:
        collection_name: "dev_test_collection"
        persist_directory: "./data/vector_store/chroma_dev"
        metadata_config:
          enable_versioning: false
          enable_soft_delete: false

  retrieval_strategies:
    default:
      type: "BasicSimilarityStrategy"
      config:
        distance_metric: "cosine"
      description: "Basic similarity search"

    metadata_filtered:
      type: "MetadataFilteredStrategy"
      config:
        distance_metric: "cosine"
        default_filters:
          priority: ["high", "medium"]
      description: "Similarity search with metadata filtering"

    hybrid_balanced:
      type: "HybridUniversalStrategy"
      config:
        combination_method: "weighted_average"
        strategies:
          - type: "BasicSimilarityStrategy"
            weight: 0.7
            config:
              distance_metric: "cosine"
          - type: "MetadataFilteredStrategy"
            weight: 0.3
            config:
              distance_metric: "cosine"
              default_filters:
                category: ["technical", "billing"]
      description: "Balanced hybrid search combining similarity and metadata"

  defaults:
    parser: "auto"
    embedder: "default"
    vector_store: "default"
    retrieval_strategy: "default"

models:
  - provider: "local"
    model: "llama3.1:8b"

  - provider: "local"
    model: "llama3.1:70b"

  - provider: "openai"
    model: "gpt-4"

  - provider: "openai"
    model: "gpt-4o-mini-turbo"

  - provider: "anthropic"
    model: "claude-3-sonnet-20240229"

# Example usage commands:
#
# 1. Ingest CSV with config-based extractors (YAKE, entities, datetime, statistics):
#    uv run python rag/cli.py --config rag/config_examples/new_schema_with_extractors.yaml ingest samples/small_sample.csv
#
# 2. Ingest PDF with different extractor set (RAKE, entities, datetime):
#    uv run python rag/cli.py --config rag/config_examples/new_schema_with_extractors.yaml ingest samples/document.pdf
#
# 3. Override with CLI extractors (CLI extractors take precedence):
#    uv run python rag/cli.py --config rag/config_examples/new_schema_with_extractors.yaml ingest samples/small_sample.csv --extractors rake entities --extractor-config '{"rake": {"max_keywords": 25}}'
#
# 4. Search using different strategies:
#    uv run python rag/cli.py --config rag/config_examples/new_schema_with_extractors.yaml search "login problems" --retrieval hybrid_balanced
#
# 5. Use different components:
#    uv run python rag/cli.py --config rag/config_examples/new_schema_with_extractors.yaml search "authentication" --embedder fast --vector-store dev